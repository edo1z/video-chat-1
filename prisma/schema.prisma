generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ChatSpace {
  id              Int               @id @default(autoincrement())
  ownerId         Int
  url             String            @unique
  isPrivate       Boolean
  createdAt       DateTime          @default(now()) @db.Timestamp(6)
  updatedAt       DateTime          @default(now()) @db.Timestamp(6)
  User            User              @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ChatSpaceMember ChatSpaceMember[]
  Invitation      Invitation[]
}

model ChatSpaceMember {
  chatSpaceId Int
  memberId    Int
  ChatSpace   ChatSpace @relation(fields: [chatSpaceId], references: [id], onDelete: Cascade)
  User        User      @relation(fields: [memberId], references: [id], onDelete: Cascade)

  @@id([chatSpaceId, memberId])
}

model Invitation {
  id          Int       @id @default(autoincrement())
  chatSpaceId Int
  userId      Int
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @default(now()) @db.Timestamp(6)
  ChatSpace   ChatSpace @relation(fields: [chatSpaceId], references: [id], onDelete: Cascade)
  User        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  password        String
  createdAt       DateTime          @default(now()) @db.Timestamp(6)
  updatedAt       DateTime          @default(now()) @db.Timestamp(6)
  ChatSpace       ChatSpace[]
  ChatSpaceMember ChatSpaceMember[]
  Invitation      Invitation[]
}
